.. py-bson-rpc documentation master file, created by
   sphinx-quickstart on Thu Jan  7 23:52:34 2016.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.


.. toctree::
   :maxdepth: 2


bsonrpc - JSON/BSON RPC
=======================

.. automodule:: bsonrpc

Install with pip3

And use:
    ``import bsonrpc``


BSONRpc Objects
===============

.. autoclass:: bsonrpc.BSONRpc
   :show-inheritance:
   :members:
   :inherited-members:
   :special-members: __init__


JSONRpc Objects
===============

.. autoclass:: bsonrpc.JSONRpc
   :show-inheritance:
   :members:
   :inherited-members:
   :special-members: __init__

Providing Services
==================

.. autofunction:: bsonrpc.service_class

.. autofunction:: bsonrpc.request

.. autofunction:: bsonrpc.notification

.. autofunction:: bsonrpc.rpc_request

.. autofunction:: bsonrpc.rpc_notification

Service Provider Example
------------------------

.. code-block:: python

  from bsonrpc import service_class, request, rpc_request, notification

  @service_class
  class MyServices(object):

      # __init__  etc..

      @request
      def revert(self, txt):
          return ''.join(reversed(list(txt)))

      @rpc_request
      def calculate(self, rpc, a, b, c):
          rpc.invoke_notification('report_progress', '.')
          rpc.invoke_notification('report_progress', '..')
          return a * b * c

      @notification
      def log(self, fmt, *args):
          print('From peer: ' + fmt % args)


bsonrpc.framing
===============

.. automodule:: bsonrpc.framing


About Threading Model
=====================

TODO
